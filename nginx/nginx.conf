server {
    # Redirect HTTP to HTTPS
    if ($scheme = http) {
        return 301 https://$server_name$request_uri;
    }

    server_name 174.129.204.234 jakobrossi.com;

    access_log /var/log/nginx/jakobrossi.com.access.log;
    error_log /var/log/nginx/jakobrossi.com.error.log;

    # Frontend Proxy
    location / {
        proxy_pass http://127.0.0.1:3000;
        client_max_body_size 50m;
        client_body_buffer_size 16k;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Flask API Proxy
    location /api/ {
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        client_max_body_size 50m;
    }

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/jakobrossi.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/jakobrossi.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
}

server {
    # Force HTTPS for all connections
    listen 80;
    listen [::]:80;
    server_name 174.129.204.234 jakobrossi.com;

    return 301 https://$host$request_uri; # Redirect HTTP to HTTPS
}